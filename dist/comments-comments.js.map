{"version":3,"file":"comments-comments.js?v=4b9dddbc47eff9047242","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACxpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///nextcloud/apps/comments/src/activitytabviewplugin.js","webpack:///nextcloud/apps/comments/src/app.js","webpack:///nextcloud/apps/comments/src/filesplugin.js","webpack:///nextcloud/apps/comments/src/templates.js","webpack:///nextcloud/webpack/bootstrap","webpack:///nextcloud/webpack/runtime/compat get default export","webpack:///nextcloud/webpack/runtime/define property getters","webpack:///nextcloud/webpack/runtime/hasOwnProperty shorthand","webpack:///nextcloud/webpack/runtime/make namespace object","webpack:///nextcloud/apps/comments/src/comments.js"],"sourcesContent":["/**\n * Copyright (c) 2016\n *\n * @author Joas Schilling <coding@schilljs.com>\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/** @typedef {import('jquery')} jQuery */\n(function () {\n  OCA.Comments.ActivityTabViewPlugin = {\n    /**\n     * Prepare activity for display\n     *\n     * @param {OCA.Activity.ActivityModel} model for this activity\n     * @param {jQuery} $el jQuery handle for this activity\n     * @param {string} view The view that displayes this activity\n     */\n    prepareModelForDisplay: function prepareModelForDisplay(model, $el, view) {\n      if (model.get('app') !== 'comments' || model.get('type') !== 'comments') {\n        return;\n      }\n\n      if (view === 'ActivityTabView') {\n        $el.addClass('comment');\n\n        if (model.get('message') && this._isLong(model.get('message'))) {\n          $el.addClass('collapsed');\n          var $overlay = $('<div>').addClass('message-overlay');\n          $el.find('.activitymessage').after($overlay);\n          $el.on('click', this._onClickCollapsedComment);\n        }\n      }\n    },\n\n    /*\n     * Copy of CommentsTabView._onClickComment()\n     */\n    _onClickCollapsedComment: function _onClickCollapsedComment(ev) {\n      var $row = $(ev.target);\n\n      if (!$row.is('.comment')) {\n        $row = $row.closest('.comment');\n      }\n\n      $row.removeClass('collapsed');\n    },\n\n    /*\n     * Copy of CommentsTabView._isLong()\n     */\n    _isLong: function _isLong(message) {\n      return message.length > 250 || (message.match(/\\n/g) || []).length > 1;\n    }\n  };\n})();\n\nOC.Plugins.register('OCA.Activity.RenderingPlugins', OCA.Comments.ActivityTabViewPlugin);","/**\n * Copyright (c) 2016 Vincent Petry <pvince81@owncloud.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Vincent Petry <vincent@nextcloud.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n(function () {\n  if (!OCA.Comments) {\n    /**\n     * @namespace\n     */\n    OCA.Comments = {};\n  }\n})();","/**\n * Copyright (c) 2016 Vincent Petry <pvince81@owncloud.com>\n *\n * @author Joas Schilling <coding@schilljs.com>\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Michael Jobst <mjobst+github@tecratech.de>\n * @author Roeland Jago Douma <roeland@famdouma.nl>\n * @author Vincent Petry <vincent@nextcloud.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n(function () {\n  _.extend(OC.Files.Client, {\n    PROPERTY_COMMENTS_UNREAD: '{' + OC.Files.Client.NS_OWNCLOUD + '}comments-unread'\n  });\n\n  OCA.Comments = _.extend({}, OCA.Comments);\n\n  if (!OCA.Comments) {\n    /**\n     * @namespace\n     */\n    OCA.Comments = {};\n  }\n  /**\n   * @namespace\n   */\n\n\n  OCA.Comments.FilesPlugin = {\n    ignoreLists: ['trashbin', 'files.public'],\n    _formatCommentCount: function _formatCommentCount(count) {\n      return OCA.Comments.Templates.filesplugin({\n        count: count,\n        countMessage: n('comments', '%n unread comment', '%n unread comments', count),\n        iconUrl: OC.imagePath('core', 'actions/comment')\n      });\n    },\n    attach: function attach(fileList) {\n      var self = this;\n\n      if (this.ignoreLists.indexOf(fileList.id) >= 0) {\n        return;\n      }\n\n      var oldGetWebdavProperties = fileList._getWebdavProperties;\n\n      fileList._getWebdavProperties = function () {\n        var props = oldGetWebdavProperties.apply(this, arguments);\n        props.push(OC.Files.Client.PROPERTY_COMMENTS_UNREAD);\n        return props;\n      };\n\n      fileList.filesClient.addFileInfoParser(function (response) {\n        var data = {};\n        var props = response.propStat[0].properties;\n        var commentsUnread = props[OC.Files.Client.PROPERTY_COMMENTS_UNREAD];\n\n        if (!_.isUndefined(commentsUnread) && commentsUnread !== '') {\n          data.commentsUnread = parseInt(commentsUnread, 10);\n        }\n\n        return data;\n      });\n      fileList.$el.addClass('has-comments');\n      var oldCreateRow = fileList._createRow;\n\n      fileList._createRow = function (fileData) {\n        var $tr = oldCreateRow.apply(this, arguments);\n\n        if (fileData.commentsUnread) {\n          $tr.attr('data-comments-unread', fileData.commentsUnread);\n        }\n\n        return $tr;\n      }; // register \"comment\" action for reading comments\n\n\n      fileList.fileActions.registerAction({\n        name: 'Comment',\n        displayName: function displayName(context) {\n          if (context && context.$file) {\n            var unread = parseInt(context.$file.data('comments-unread'), 10);\n\n            if (unread >= 0) {\n              return n('comments', '1 new comment', '{unread} new comments', unread, {\n                unread: unread\n              });\n            }\n          }\n\n          return t('comments', 'Comment');\n        },\n        mime: 'all',\n        order: -140,\n        iconClass: 'icon-comment',\n        permissions: OC.PERMISSION_READ,\n        type: OCA.Files.FileActions.TYPE_INLINE,\n        render: function render(actionSpec, isDefault, context) {\n          var $file = context.$file;\n          var unreadComments = $file.data('comments-unread');\n\n          if (unreadComments) {\n            var $actionLink = $(self._formatCommentCount(unreadComments));\n            context.$file.find('a.name>span.fileactions').append($actionLink);\n            return $actionLink;\n          }\n\n          return '';\n        },\n        actionHandler: function actionHandler(fileName, context) {\n          context.$file.find('.action-comment').tooltip('hide'); // open sidebar in comments section\n\n          OCA.Files.Sidebar.setActiveTab('comments');\n          OCA.Files.Sidebar.open(context.dir + '/' + fileName);\n        }\n      }); // add attribute to \"elementToFile\"\n\n      var oldElementToFile = fileList.elementToFile;\n\n      fileList.elementToFile = function ($el) {\n        var fileInfo = oldElementToFile.apply(this, arguments);\n        var commentsUnread = $el.data('comments-unread');\n\n        if (commentsUnread) {\n          fileInfo.commentsUnread = commentsUnread;\n        }\n\n        return fileInfo;\n      };\n    }\n  };\n})();\n\nOC.Plugins.register('OCA.Files.FileList', OCA.Comments.FilesPlugin);","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function () {\n  var template = Handlebars.template,\n      templates = OCA.Comments.Templates = OCA.Comments.Templates || {};\n  templates['filesplugin'] = template({\n    \"compiler\": [8, \">= 4.3.0\"],\n    \"main\": function main(container, depth0, helpers, partials, data) {\n      var helper,\n          alias1 = depth0 != null ? depth0 : container.nullContext || {},\n          alias2 = container.hooks.helperMissing,\n          alias3 = \"function\",\n          alias4 = container.escapeExpression,\n          lookupProperty = container.lookupProperty || function (parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n\n        return undefined;\n      };\n\n      return \"<a class=\\\"action action-comment permanent\\\" title=\\\"\" + alias4((helper = (helper = lookupProperty(helpers, \"countMessage\") || (depth0 != null ? lookupProperty(depth0, \"countMessage\") : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {\n        \"name\": \"countMessage\",\n        \"hash\": {},\n        \"data\": data,\n        \"loc\": {\n          \"start\": {\n            \"line\": 1,\n            \"column\": 50\n          },\n          \"end\": {\n            \"line\": 1,\n            \"column\": 66\n          }\n        }\n      }) : helper)) + \"\\\" href=\\\"#\\\">\\n\t<img class=\\\"svg\\\" src=\\\"\" + alias4((helper = (helper = lookupProperty(helpers, \"iconUrl\") || (depth0 != null ? lookupProperty(depth0, \"iconUrl\") : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {\n        \"name\": \"iconUrl\",\n        \"hash\": {},\n        \"data\": data,\n        \"loc\": {\n          \"start\": {\n            \"line\": 2,\n            \"column\": 23\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 34\n          }\n        }\n      }) : helper)) + \"\\\"/>\\n</a>\\n\";\n    },\n    \"useData\": true\n  });\n})();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @copyright Copyright (c) 2016 Roeland Jago Douma <roeland@famdouma.nl>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Roeland Jago Douma <roeland@famdouma.nl>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport './app';\nimport './templates';\nimport './filesplugin';\nimport './activitytabviewplugin';\nwindow.OCA.Comments = OCA.Comments;"],"names":[],"sourceRoot":""}